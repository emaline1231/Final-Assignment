load("~/Final Assignment/.RData")
bmi
data <- emily_dataset
library(readxl)
emily_dataset <- read_excel("emily_dataset.xlsx")
View(emily_dataset)
data <- emily_dataset
bmi <- emily_dataset$bmi
systolic <- emily_dataset$systolic
diastolic <- emily_dataset$diastolic
age <- emily_dataset$age
gender <- emily_dataset$gender
weight <- emily_dataset$weight
height <- emily_dataset$height
plot(bmi,systolic)
plot(bmi,diastolic)
colMeans(data[sapply(data, is.numeric)])
a <- ggplot(data = emily_dataset, aes(bmi,systolic))+geom_point()
library(ggplot2)
library(ggpubr)
cor.test(age,systolic)
cor.test(height,systolic)
cor.test(weight,systolic)
cor.test(bmi,systolic)
cor.test(age,diastolic)
cor.test(height,diastolic)
cor.test(weight,diastolic)
cor.test(bmi,diastolic)
NumbersOnly <- emily_dataset[-c(1,3)]
View(NumbersOnly)
x <- ggplot(data, aes(x = c(age,bmi,height,weird), y= c(systolic,diastolic))
)
x + geom_tile()
x <- ggplot(data, aes(x = c(age,bmi,height,weight), y= c(systolic,diastolic))
)
x+geom_tile()
rlang::last_error()
x <- ggplot(data, aes(x = c(age,bmi,height,weight), y= c(systolic,diastolic)+ fill=1))
x <- ggplot(data, aes(x = Var1, y = Var2, fill=1))+geom_tile()
x
x <- ggplot(data, aes(x = bmi, y = height, fill=1))+geom_tile()
x
cormat <- round(cor(NumbersOnly),2)
head(cormat)
install.packages(reshape)
library(reshape)
install.packages(reshape2)
install.packages("reshape2")
library(reshape2)
melted_cormat <- melt(cormat)
head(melted_cormat)
gplot(data=melted_cormat,aes(x=Var1, y=Var2, fill=value))+geom_tile()
ggplot(data=melted_cormat,aes(x=Var1, y=Var2, fill=value))+geom_tile()
View(NumbersOnly)
View(NumbersOnly)
View(NumbersOnly)
get_uppter_tri <- function(cormat){cormat[lower.tri(cormat)]<-
NA
return(cormat)}
get_uppter_tri <- function(cormat){cormat[lower.tri(cormat)]<-NA
return(cormat)
}
upper_tri <- get_uppter_tri(cormat)
upper_tri
melted_uppertri <-melt(upper_tri,na.rm = TRUE)
ggplot(data=melted_uppertri,aes(x=Var1, y=Var2, fill=value))+geom_tile(color="white")
scale_fill_gradient2(low = "blue", high = "red",mid = "white", midpoint = 0, limit = c(-1,1), space = "Lab", name ="Pearson\nCorrelation")+theme_minimal()+theme(axis.text.x = element_text(angle=45, vjust=1, size=12,hjust=1))+coord_fixed()
OGCorMat <- ggplot(data=melted_uppertri,aes(x=Var1, y=Var2, fill=value))+geom_tile(color="white")
OGCorMat + scale_fill_gradient2(low = "blue", high = "red",mid = "white", midpoint = 0, limit = c(-1,1), space = "Lab", name ="Pearson\nCorrelation")+theme_minimal()+theme(axis.text.x = element_text(angle=45, vjust=1, size=12,hjust=1))+coord_fixed()
FinalMat <- OGCorMat + scale_fill_gradient2(low = "blue", high = "red",mid = "white", midpoint = 0, limit = c(-1,1), space = "Lab", name ="Pearson\nCorrelation")+theme_minimal()+theme(axis.text.x = element_text(angle=45, vjust=1, size=12,hjust=1))+coord_fixed()
FinalMat + geom_text(aes(Var2, Var1, label = value), color = "black", size = 4) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
legend.justification = c(1, 0),
legend.position = c(0.6, 0.7),
legend.direction = "horizontal")+
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5))
FinalMat + geom_text(aes(Var2, Var1, label = value), color = "black", size = 4) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5))
)
FinalMat + geom_text(aes(Var2, Var1, label = value), color = "black", size = 4) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5))
)
upper_tri <- get_upper_tri(cormat)
get_upper_tri <- function(cormat){cormat[lower.tri(cormat)]<-NA
return(cormat)}
View(upper_tri)
upper_tri <- get_upper_tri(cormat)
upper_tri
TriMap <- melt(upper_tri, na.rm = TRUE)
ggplot(data = TriMap, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
Final Map <- ggplot(TriMap, aes(Var2, Var1, fill = value))+
FinalMap <- ggplot(data = TriMap, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
ggplot(data = TriMap, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
FinalMap <- ggplot(TriMap, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+ # minimal theme
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
FinalMap
TriMap +
geom_text(aes(Var2, Var1, label = value), color = "black", size = 4) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
legend.justification = c(1, 0),
legend.position = c(0.6, 0.7),
legend.direction = "horizontal")+
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5))
TriMap +
geom_text(aes(Var2, Var1, label = value), color = "black", size = 4) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
legend.justification = c(1, 0),
legend.position = c(0.6, 0.7),
legend.direction = "horizontal")+
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5))
TriMap +
geom_text(aes(Var2, Var1, label = value), color = "black", size = 4) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
legend.justification = c(1, 0),
legend.position = c(0.6, 0.7),
legend.direction = "horizontal")
TriMap
FinalMap +
geom_text(aes(Var2, Var1, label = value), color = "black", size = 4) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
legend.justification = c(1, 0),
legend.position = c(0.6, 0.7),
legend.direction = "horizontal")
FinalMap +
geom_text(aes(Var2, Var1, label = value), color = "black", size = 4) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank()
FinalMap +
FinalMap + geom_text(aes(Var2, Var1, label = value), color = "black", size = 4)
cormat <- round(cor(NumbersOnly),2)
head(cormat)
get_upper_tri <- function(cormat){cormat[lower.tri(cormat)]<-NA
return(cormat)}
TriMap <- melt(upper_tri, na.rm = TRUE)
ggplot(data = TriMap, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
cormat <- round(cor(NumbersOnly),2)
head(cormat)
get_upper_tri <- function(cormat){cormat[lower.tri(cormat)]<-NA
return(cormat)}
TriMap <- melt(upper_tri, na.rm = TRUE)
ColorMap <- ggplot(data = TriMap, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
ColorMap <- FinalMap + geom_text(aes(Var2, Var1, label = value), color = "black", size = 4)
cormat <- round(cor(NumbersOnly),2)
head(cormat)
get_upper_tri <- function(cormat){cormat[lower.tri(cormat)]<-NA
return(cormat)}
TriMap <- melt(upper_tri, na.rm = TRUE)
ColorMap <- ggplot(data = TriMap, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
FinalMap <- ColorMap + geom_text(aes(Var2, Var1, label = value), color = "black", size = 4)
FinalMap <- ColorMap + geom_text(aes(Var2, Var1, label = value), color = "black", size = 4)
cormat <- round(cor(NumbersOnly),2)
head(cormat)
get_upper_tri <- function(cormat){cormat[lower.tri(cormat)]<-NA
return(cormat)}
TriMap <- melt(upper_tri, na.rm = TRUE)
ColorMap <- ggplot(data = TriMap, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
FinalMap <- ColorMap + geom_text(aes(Var2, Var1, label = value), color = "black", size = 4)
FinalMap
install.packages("writexl")
library(writexl)
writexl(NumbersOnly,"C:\Users\emali\Downloads")
writexl(NumbersOnly,"C:\\Users\emali\Downloads")
writexl(NumbersOnly,""C:\\Users\emali\Downloads\")
writexl(NumbersOnly,"C:\\Users\emali\Downloads\")
writexl(NumbersOnly,"C:\\Users\\emali\Downloads\")
writexl(NumbersOnly,"C:\\Users\\emali\\Downloads\")
writexl(NumbersOnly,"C:\\Users\\emali\\Downloads\\NumbersOnly.xlsx")
writexl(NumbersOnly,"C:\\Users\\emali\\Downloads\\NumbersOnly.xlsx")
write_xlsx(NumbersOnly,"C:\\Users\\emali\\Downloads\\NumbersOnly.xlsx")
